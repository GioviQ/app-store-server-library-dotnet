using AppStoreServerLibraryDotnet.Models;

namespace AppStoreServerLibraryDotnet;

public interface IAppStoreServerAPIClient
{
    /// <summary>
    /// Returns a signed JSON Web Token for Calling App Store Server API.
    /// </summary>
    /// <param name="keyId">Your private key ID from App Store Connect</param>
    /// <param name="issuerId">Your issuer ID from the API Keys page in App Store Connect</param>
    /// <param name="privateKey">The private that was generated by Apple, encoded as Base64</param>
    /// <param name="bundleId">Your App bundle Id</param>
    /// <returns>Signed JWT</returns>
    string GetAppStoreServerApiToken(string keyId, string issuerId, string privateKey, string bundleId);

    /// <summary>
    /// Get the statuses for all of a customer’s auto-renewable subscriptions in your app.
    /// </summary>
    /// <param name="transactionId"> The identifier of a transaction that belongs to the customer, and which may be an original transaction identifier</param>
    /// <returns>The status for all the customer’s subscriptions, organized by their subscription group identifier.</returns>
    Task<SubscriptionStatusResponse> GetAllSubscriptionStatuses(string transactionId);

    /// <summary>
    /// Get a list of notifications that the App Store server attempted to send to your server.
    /// </summary>
    /// <returns>A list of notifications and their attempts</returns>
    Task<NotificationHistoryResponse?> GetNotificationHistory(NotificationHistoryRequest notificationHistoryRequest,
        string paginationToken = "");

    /// <summary>
    /// Get a customer’s in-app purchase transaction history for your app.
    /// </summary>
    /// <returns>A list of transactions associated with the provided Transaction Id</returns>
    Task<TransactionHistoryResponse?> GetTransactionHistory(string transactionId,
        string revisionToken = "");
}